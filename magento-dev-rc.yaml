heat_template_version: 2015-10-15

description: |
  #### Development Site

  A Single Linux server with
  [Magento 1.9.2.0 Community Edition](http://www.magentocommerce.com/product/community-edition/)
  installed with [nginx](http://nginx.org/en/), [PHP FPM](http://php-fpm.org/about/), and
  [Percona](https://www.percona.com/software/mysql-database/percona-server).

  This deployment is intended for development and test cases only. It is not
  designed for hosting "live" sites and is not scalable.

  **This deployment is meant for development and testing scenarios only and is not
  intended for production use**.
parameter_groups:
- label: Magento Settings
  parameters:
  - magento_url
  - magento_user
  - magento_email
  - magento_fname
  - magento_lname
  - magento_eula
- label: RackConnect Settings
  parameters:
  - rc_network_name
- label: rax-dev-params
  parameters:
  - ansible_source

parameters:
  #Magento Customization
  magento_url:
    type: string
    default: example.com
    label: Site Domain
    description: Domain to use with Magento Site
    constraints:
    - allowed_pattern: "^[a-zA-Z0-9.-]{1,255}.[a-zA-Z]{2,15}$"
      description: Must be a valid domain name
    immutable: true
  magento_user:
    type: string
    default: admin
    label: Magento Admin Username
    description: Username for Magento admin
    constraints:
    - allowed_pattern: "^[a-zA-Z0-9]*$"
      description: Only can contain A-Z and 0-9
    immutable: true
  magento_fname:
    type: string
    default: Joe
    label: Magento Admin First Name
    description: First name for Magento admin
    immutable: true
  magento_lname:
    type: string
    default: User
    label: Magento Admin Last Name
    description: Last name for Magento admin
    immutable: true
  magento_email:
    type: string
    default: admin@example.com
    label: Magento Admin E-Mail
    description: E-Mail for Magento admin
    immutable: true
  magento_eula:
    type: boolean
    label: Agree to Terms?
    description: You must agree to the terms of the Magento Community Edition License
    constraints:
    - allowed_values:
      - True
      description: |
        You must agree to the Magento Community Edition License
        which can be found here: http://opensource.org/licenses/osl-3.0.php
    immutable: true
  #Advanced Options
  magento_install:
    type: string
    default: "Fresh install of the latest Magento CE 1.9.x release"
    label: How should Magento be deployed?
    description: |
      This option determines whether or not to install Magento and/or the sample
      data, or if you will need to upload your own Magento code.
    constraints:
    - allowed_values:
      - "Fresh install of the latest Magento CE 1.9.x release"
      - "Fresh install of the latest Magento CE 1.9.x release (including sample data)"
      - "Don't install Magento. I will upload an existing Magento site (see instructions)"
    immutable: true
  rc_network_name:
    type: string
    label: RackConnect Network
    description: Name or UUID of RackConnected network to attach this server to
    constraints:
    - custom_constraint: rackconnect.network
    immutable: true
  #Advanced Options
  server_flavor:
    type: string
    default: 8 GB General Purpose v1
    label: Flavor for Magento Server
    description: Flavor of Cloud Server to use for Magento
    constraints:
    - allowed_values:
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
    immutable: true
  server_image:
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM) (Orchestration)
    label: Server Image
    description: Image to be used for all servers in this stack
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM) (Orchestration)
      - CentOS 7 (PVHVM) (Orchestration)
    immutable: true
  ansible_source:
    type: string
    default: http://catalog.rs-heat.com/ansible-roles/ansible-roles.tar.gz
    label: Ansible Tarball
    description: The Ansible Roles will be pulled from the location provided
    immutable: true

resources:
  #Passwords
  magento_pass:
    type: OS::Heat::RandomString
  database_pass:
    type: OS::Heat::RandomString
  root_pass:
    type: OS::Heat::RandomString
  holland_pass:
    type: OS::Heat::RandomString
  #SSH Key
  ssh_key:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true
  #Software Configurations
  upload_role_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
      - name: results
      config:
        str_replace:
          template: |
            #!/bin/bash
            set -e
            mkdir -p /etc/ansible/roles
            wget ansible_source -O /tmp/ansible-roles.tar.gz 2>&1
            tar -xf /tmp/ansible-roles.tar.gz --strip-components=1 -C /etc/ansible/roles
          params:
            ansible_source: { get_param: ansible_source }
  magento_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      config: |
        ---
        - name: Install and configure Magento
          hosts: localhost
          connection: local
          roles:
          - common
          - nginx
          - percona
          - holland
          - redis
          - memcache
          - php-fpm
          - magento-ce
          - firewall
  deploy_roles:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config: { get_resource: upload_role_config }
      server: { get_resource: magento_server }
  deploy_magento:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy_roles
    properties:
      signal_transport: TEMP_URL_SIGNAL
      input_values:
        tz: "America/Chicago"
        nginx_vhost_str: { get_param: magento_url }
        nginx_vhost_template: "magento"
        mysql_root_password: { get_attr: [root_pass, value] }
        mysql_default_user: "magento"
        mysql_default_user_password: { get_attr: [ database_pass, value ] }
        mysql_default_database: "magento"
        holland_mysql_user: "holland"
        holland_mysql_password: { get_attr: [holland_pass, value] }
        holland_mysql_host: "localhost"
        holland_create_user: yes
        redis_instances:
        - { name: 'fpc', port: '6381', persistent: 'FALSE', maxmemory: '1gb' }
        - { name: 'obj', port: '6379', persistent: 'FALSE', maxmemory: '1gb' }
        - { name: 'ses', port: '6380', persistent: 'TRUE', maxmemory: '1gb' }
        phpfpm_vhosts:
        - name: '{ get_param: magento_url }'
          aliases: ['www.{ get_param: magento_url }']
          http_port: '80'
          ssl_port: '443'
          template: 'magento'
          phpmyadmin: 'False'
          phpfpm_user: '{{ magento_sftp_user }}'
          phpfpm_user_id: '{{ magento_sftp_user_id }}'
        - name: '{ get_param: magento_url }-admin'
          aliases: ['www.{ get_param: magento_url }']
          http_port: '81'
          ssl_port: '444'
          template: 'magento'
          phpmyadmin: 'False'
          phpfpm_user: 'magento'
          phpfpm_user_id: '{{ magento_sftp_user_id }}'
        magento_db_user: "magento"
        magento_db_password: { get_attr: [database_pass, value] }
        magento_db_name: "magento"
        mysql_host_ip: "localhost"
        magento_sftp_user: "magento"
        magento_sftp_password: { get_attr: [magento_pass, value] }
        magento_reach_dropdown: { get_param: magento_install }
        magento_vhost_domain: { get_param: magento_url }
        magento_admin_user: { get_param: magento_user }
        magento_admin_pass: { get_attr: [magento_pass, value] }
        magento_admin_fname: { get_param: magento_fname }
        magento_admin_lname: { get_param: magento_lname }
        magento_admin_email: { get_param: magento_email }
      config: { get_resource: magento_config }
      server: { get_resource: magento_server }
  #Master Server
  magento_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: "OS::stack_name" }
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      key_name: { get_resource: ssh_key }
      software_config_transport: POLL_TEMP_URL
      config_drive: true
      user_data_format: SOFTWARE_CONFIG
      networks:
      - network: { get_param: rc_network_name }
      - network: 11111111-1111-1111-1111-111111111111
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        build_config: "backup_agent_only,monitoring_defaults"
  magento_server_public_ip:
    type: Rackspace::RackConnect::PublicIP
    depends_on:
    - magento_server
    properties:
      server_id: { get_resource: magento_server }
  #Monitoring Checks
  magento_server_http_check:
    type: Rackspace::CloudMonitoring::Check
    depends_on:
    - deploy_magento
    - magento_server_public_ip
    properties:
      entity: { get_resource: magento_server }
      type: remote.http
      label:
        str_replace:
          template: stack Master HTTP Check
          params:
            stack: { get_param: "OS::stack_name" }
      details:
        url:
          str_replace:
            template: "http://ipaddr"
            params:
              ipaddr: { get_attr: [magento_server, accessIPv4] }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
      period: 120
      timeout: 10
      monitoring_zones_poll:
      - Northern Virginia (IAD)
      - Chicago (ORD)
      - Dallas Fort Worth (DFW)
      - London (LON)
      target_hostname: { get_attr: [magento_server, accessIPv4] }
      target_receiver: IPv4
  #Cloud Backup
  magento_backup:
    type: Rackspace::Cloud::BackupConfig
    depends_on: magento_server
    properties:
      #host_ip_address: { get_attr: [magento_server, accessIPv4] }
      server: { get_resource: magento_server }
      BackupConfigurationName:
        str_replace:
          template: stack Weekly Backup
          params:
            stack: { get_param: "OS::stack_name" }
      Inclusions:
      - FilePath: "/var/spool/holland"
        FileItemType: "Folder"
      - FilePath: "/var/www/"
        FileItemType: "Folder"
      NotifyFailure: true
      NotifyRecipients: { get_param: magento_email }
      TimeZoneId: Central Standard Time
      StartTimeAmPm: AM
      StartTimeHour: 1
      StartTimeMinute: 0
      HourInterval: null
      DayOfWeekId: 0
      Frequency: "Weekly"
      VersionRetention: 30
outputs:
  magento_login_user:
    description: Magento Admin User
    value:
      get_param: magento_user
  magento_login_password:
    description: Magento Admin Password
    value:
      get_attr: [magento_pass, value]
  magento_public_ip:
    description: Server Public IP
    value:
      get_attr: [magento_server, accessIPv4]
  magento_admin_url:
    description: Magento Admin URL
    value:
      str_replace:
        template: "https://domain/admin/"
        params:
          domain: { get_param: magento_url }
  magento_public_url:
    description: Magento Public URL
    value:
      str_replace:
        template: "http://domain/"
        params:
          domain: { get_param: magento_url }
  mysql_user:
    description: Database User
    value: "magento"
  mysql_password:
    description: Database Password
    value:
      get_attr: [database_pass, value]
  ssh_private_key:
    description: SSH Private Key
    value:
      get_attr: [ssh_key, private_key]
